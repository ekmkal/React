{"version":3,"sources":["components/CityBox.js","components/ListOfCities.js","App.js","reportWebVitals.js","index.js"],"names":["CityBox","city","country","weatherMain","weatherDesc","maxTemp","minTemp","lat","lon","className","ListOfCities","cityWeather","map","name","sys","weather","main","description","temp_max","temp_min","coord","id","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0+EA0BeA,EAxBC,SAAC,GASV,IARHC,EAQE,EARFA,KACAC,EAOE,EAPFA,QACAC,EAME,EANFA,YACAC,EAKE,EALFA,YACAC,EAIE,EAJFA,QACAC,EAGE,EAHFA,QACAC,EAEE,EAFFA,IACAC,EACE,EADFA,IAEA,OACI,sBAAKC,UAAU,UAAf,UACI,qBAAIA,UAAU,WAAd,UAA0BR,EAA1B,KAAkCC,KAClC,sBAAKO,UAAU,cAAf,UACI,6BAAKN,IACL,4BAAIC,OAER,2CAAcC,KACd,2CAAcC,KACd,2CAAcC,EAAd,KAAqBC,SCElBE,EApBM,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,YACnB,OACI,8BACKA,EAAYC,KAAI,SAAAX,GACb,OAAO,cAAC,EAAD,CAEHA,KAAMA,EAAKY,KACXX,QAASD,EAAKa,IAAIZ,QAClBC,YAAaF,EAAKc,QAAQ,GAAGC,KAC7BZ,YAAaH,EAAKc,QAAQ,GAAGE,YAC7BZ,QAASJ,EAAKe,KAAKE,SACnBZ,QAASL,EAAKe,KAAKG,SACnBZ,IAAKN,EAAKmB,MAAMb,IAChBC,IAAKP,EAAKmB,MAAMZ,KARXP,EAAKc,QAAQ,GAAGM,UCK1BC,MATf,WACE,OACE,sBAAKb,UAAU,MAAf,UACE,oBAAIA,UAAU,aAAd,qBACA,cAAC,EAAD,CAAcE,YAAaA,QCIlBY,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.29b97d2c.chunk.js","sourcesContent":["import React from 'react'\n\nconst CityBox = ({\n    city, \n    country, \n    weatherMain, \n    weatherDesc, \n    maxTemp, \n    minTemp, \n    lat,\n    lon\n}) => {\n    return (\n        <div className=\"cityBox\">\n            <h2 className=\"cityName\">{city}, {country}</h2>\n            <div className=\"cityWeather\">\n                <h3>{weatherMain}</h3>\n                <p>{weatherDesc}</p>\n            </div>\n            <p>max temp: {maxTemp}</p>\n            <p>min temp: {minTemp}</p>\n            <p>location: {lat}, {lon}</p>\n        </div>\n    );\n};\n\nexport default CityBox;\n","import React from 'react';\nimport CityBox from './CityBox';\n\nconst ListOfCities = ({cityWeather}) => {\n    return (\n        <div>\n            {cityWeather.map(city => {\n                return <CityBox \n                    key={city.weather[0].id}\n                    city={city.name} \n                    country={city.sys.country}\n                    weatherMain={city.weather[0].main}\n                    weatherDesc={city.weather[0].description}\n                    maxTemp={city.main.temp_max}\n                    minTemp={city.main.temp_min}\n                    lat={city.coord.lat}\n                    lon={city.coord.lon}\n                />\n            })}\n        </div>\n    );\n};\n\nexport default ListOfCities;","import './App.css';\nimport cityWeather from './city-weather.json';\nimport ListOfCities from './components/ListOfCities';\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <h1 className=\"mainHeader\">Weather</h1>\n      <ListOfCities cityWeather={cityWeather}/>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}